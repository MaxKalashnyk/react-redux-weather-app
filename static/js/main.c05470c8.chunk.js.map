{"version":3,"sources":["components/Searchbar/SearchBar.js","utils/constants.js","components/CurrentForecast/CurrentForecast.js","components/WeatherForecastItem/WeatherForecastItem.js","actions/updateCurrentForecast.js","components/WeatherForecast/WeatherForecast.js","components/HistoryListItem/HistoryListItem.js","components/HistoryList/HistoryList.js","components/FavouritesListItem/FavouritesListItem.js","components/FavouritesList/FavouritesList.js","components/UserActions/UserActions.js","components/ThemeColorSwitcher/ThemeColorSwitcher.js","services/dataService.js","actions/forecastDataAction.js","containers/App.js","actions/placeAction.js","actions/themeColorAction.js","reducers/units.js","reducers/place.js","reducers/theme.js","reducers/forecast.js","reducers/currentForecast.js","reducers/index.js","store/configureStore.js","index.js"],"names":["SearchBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputRef","React","createRef","inherits","createClass","key","value","place","formattedPlaceName","formatted_address","split","handleForecastData","handleCurrentForecastData","current","refs","input","react_default","a","createElement","className","react_google_autocomplete_default","onPlaceSelected","performSearch","bind","autoFocus","ref","Component","apiKey","generateIconClass","iconString","getDayFromDateString","milliseconds","type","arguments","length","undefined","Intl","DateTimeFormat","weekday","format","convertTemperatureUnits","units","concat","Math","round","CurrentForecast","apply","pressureValue","_this$props$forecastD","forecastData","name","dt","main","wind","weather","setIconClassName","icon","date","Date","getcurrentDateString","pressure","speed","toFixed","degrees","windDirectionString","defineWindDirection","deg","humidity","description","temp_min","temp_max","temp","renderTemplate","WeatherForecastItem","console","log","_this$props","onClick","updateHandler","dateString","firstStringPartArray","formatDateValue","dt_txt","updateCurrentForecast","data","payload","WeatherForecast","isFetching","currentForecast","setCurrentForecast","currentForecastData","dataCode","cod","finalDaysForecastList","list","hoursForecastList","forEach","item","push","createSortedList","weatherForecastItemsList","map","components_WeatherForecastItem_WeatherForecastItem","uuid","v4","placeObj","finalCurrentForecastData","assign","components_CurrentForecast_CurrentForecast","renderCurrentForecastFromItems","connect","store","dispatch","HistoryListItem","HistoryList","components_HistoryListItem_HistoryListItem","FavouritesListItem","FavouritesList","components_FavouritesListItem_FavouritesListItem","UserActions","components_FavouritesList_FavouritesList","components_HistoryList_HistoryList","ThemeColorSwitcher","_ref","target","handleThemeColorChange","color","onChange","changeColorThemeHandler","HttpService","url","city","urlsArray","getWeatherURLS","Promise","all","u","fetch","then","responses","res","json","requestURL","response","catch","error","REQUEST","REQUEST_SUCCESS","REQUEST_FAIL","App","setPlaceAction","getForecastDataAction","setThemeColor","themeColor","themeColorClass","components_ThemeColorSwitcher_ThemeColorSwitcher","Searchbar_SearchBar","components_WeatherForecast_WeatherForecast","components_UserActions_UserActions","setPlace","getWeatherData","err","initialState","unit","isFavourite","rootReducer","combineReducers","state","action","objectSpread","createStore","applyMiddleware","thunk","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.c05470c8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    performSearch(place) {\r\n        // console.log(place);\r\n        const formattedPlaceName = place.formatted_address.split(\",\")[0];\r\n        // console.log(formattedPlaceName);\r\n        this.props.place(formattedPlaceName);\r\n        this.props.handleForecastData(formattedPlaceName);\r\n        this.props.handleCurrentForecastData(null);\r\n        this.inputRef.current.refs.input.value = \"\";\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props);\r\n\r\n        return (\r\n            <div className=\"search-block\">\r\n                <button className=\"add-to-favourite\" />\r\n                <Autocomplete\r\n                    className=\"main-search-input\"\r\n                    onPlaceSelected={this.performSearch.bind(this)}\r\n                    autoFocus\r\n                    ref={this.inputRef}\r\n                />\r\n                <select className=\"temperature-units\">\r\n                    <option value=\"Celsius\">°C</option>\r\n                    <option value=\"Farengheit\">°F</option>\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\nSearchBar.propTypes = {\r\n    handleForecastData: PropTypes.func.isRequired,\r\n    handleCurrentForecastData: PropTypes.func.isRequired\r\n};\r\n","const pascalToMmHg = 0.75006;\r\nconst coefficientImperial = 2.2369;\r\n\r\nexport const currentWeaterURLString =\r\n    \"https://api.openweathermap.org/data/2.5/weather?q=\";\r\nexport const weatherForecastURLString =\r\n    \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\nexport const apiKey = \"c1bfe9b98646ae15af74164518f99538\";\r\n\r\nexport const scrollableBlockWrapClassFavourite = \"user-activity-list-favourite\";\r\n\r\nexport const scrollableBlockWrapClassHistory = \"user-activity-list-history\";\r\n\r\nexport const formatValue = value => (value ? Math.round(value) : \"\");\r\n\r\nexport const checkProperty = property => (property ? property : \"\");\r\n\r\nexport const getCurrentDate = () => {\r\n    const currDate = new Date();\r\n    const day = String(currDate.getDate()).padStart(2, \"0\");\r\n    const month = String(currDate.getMonth() + 1).padStart(2, \"0\");\r\n    const year = currDate.getFullYear();\r\n    const finalDate = `${day}/${month}/${year}`;\r\n\r\n    return finalDate;\r\n};\r\n\r\nexport const getcurrentDateString = milliseconds => {\r\n    if (!milliseconds) {\r\n        return;\r\n    }\r\n\r\n    const date = new Date(milliseconds);\r\n    return new Intl.DateTimeFormat(\"en-GB\").format(date * 1000);\r\n};\r\n\r\nexport const getCurrentDayName = () => {\r\n    const currDate = new Date();\r\n    const days = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\"\r\n    ];\r\n    const day = new Date(currDate);\r\n    const dayName = days[day.getDay()];\r\n\r\n    return dayName;\r\n};\r\n\r\nexport const convertPressure = pressureValue => {\r\n    if (!pressureValue) {\r\n        return \"\";\r\n    }\r\n\r\n    return Math.round(pressureValue * pascalToMmHg);\r\n};\r\n\r\nexport const defineWindDirection = degrees => {\r\n    let windDirectionString = \"\";\r\n\r\n    if (!degrees) {\r\n        return \"\";\r\n    } else {\r\n        if (degrees <= 22.5 || (degrees > 337.5 && degrees <= 360)) {\r\n            windDirectionString = \"North\";\r\n        } else if (degrees > 22.5 && degrees < 67.5) {\r\n            windDirectionString = \"North-East\";\r\n        } else if (degrees > 67.5 && degrees < 112.5) {\r\n            windDirectionString = \"East\";\r\n        } else if (degrees > 112.5 && degrees < 157.5) {\r\n            windDirectionString = \"South-East\";\r\n        } else if (degrees > 157.5 && degrees < 202.5) {\r\n            windDirectionString = \"South\";\r\n        } else if (degrees > 202.5 && degrees < 247.5) {\r\n            windDirectionString = \"South-West\";\r\n        } else if (degrees > 247.5 && degrees < 292.5) {\r\n            windDirectionString = \"West\";\r\n        } else if (degrees > 292.5 && degrees < 337.5) {\r\n            windDirectionString = \"North-West\";\r\n        }\r\n\r\n        return windDirectionString;\r\n    }\r\n};\r\n\r\nexport const formatDateValue = dateString => {\r\n    if (!dateString) {\r\n        return;\r\n    }\r\n\r\n    const firstStringPartArray = dateString.split(\" \")[0].split(\"-\");\r\n\r\n    return `${firstStringPartArray[2]}/${firstStringPartArray[1]}`;\r\n};\r\n\r\nexport const generateIconClass = iconString => {\r\n    let finalIconClass = \"\";\r\n\r\n    if (!iconString) {\r\n        return;\r\n    } else {\r\n        if (iconString === \"01d\" || iconString === \"01n\") {\r\n            finalIconClass = \"day-forecast-weather-sunny\";\r\n        } else if (iconString === \"02d\" || iconString === \"02n\") {\r\n            finalIconClass = \"day-forecast-weather-cloudy-small\";\r\n        } else if (\r\n            iconString === \"03d\" ||\r\n            iconString === \"04d\" ||\r\n            iconString === \"50d\" ||\r\n            iconString === \"03n\" ||\r\n            iconString === \"04n\" ||\r\n            iconString === \"50n\"\r\n        ) {\r\n            finalIconClass = \"day-forecast-weather-cloudy\";\r\n        } else if (iconString === \"09d\" || iconString === \"09n\") {\r\n            finalIconClass = \"day-forecast-weather-shower-rain\";\r\n        } else if (iconString === \"10d\" || iconString === \"10n\") {\r\n            finalIconClass = \"day-forecast-weather-rain\";\r\n        } else if (iconString === \"11d\" || iconString === \"11n\") {\r\n            finalIconClass = \"day-forecast-weather-thunder\";\r\n        } else if (iconString === \"13d\" || iconString === \"13n\") {\r\n            finalIconClass = \"day-forecast-weather-snow\";\r\n        } else {\r\n            finalIconClass = \"\";\r\n        }\r\n    }\r\n\r\n    return finalIconClass;\r\n};\r\n\r\nexport const generateID = () => {\r\n    return (\r\n        \"_\" +\r\n        Math.random()\r\n            .toString(36)\r\n            .substr(2, 9)\r\n    );\r\n};\r\n\r\nexport const getDayFromDateString = (milliseconds, type = \"long\") => {\r\n    return new Intl.DateTimeFormat(\"en-US\", { weekday: type }).format(\r\n        milliseconds * 1000\r\n    );\r\n};\r\n\r\nexport const convertTemperatureUnits = (value, units) => {\r\n    if (!value) {\r\n        return;\r\n    }\r\n\r\n    return units === \"C\"\r\n        ? `${Math.round(value)} °C`\r\n        : `${Math.round(value * 1.8 + 32)} °F`;\r\n};\r\n\r\nexport const convertWindUnits = (value, units) => {\r\n    if (!value) {\r\n        return \"\";\r\n    }\r\n\r\n    return units === \"C\"\r\n        ? `${value.toFixed(1)} m/s`\r\n        : `${(value * coefficientImperial).toFixed(1)} mph`;\r\n};\r\n\r\nexport const putItemToLocalStorage = (key, list) => {\r\n    localStorage.setItem(key, JSON.stringify(list));\r\n};\r\n\r\nexport const checkResponse = response => {\r\n    if (response.data.status === \"ok\") {\r\n        return true;\r\n    } else if (response.data.message) {\r\n        const message = response.data.message.split(\"_\").join(\" \");\r\n        throw new Error(message);\r\n    }\r\n    throw new Error(\"Something wrong\");\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { getDayFromDateString } from \"../../utils/constants\";\r\nimport { getcurrentDateString } from \"../../utils/constants\";\r\nimport { defineWindDirection } from \"../../utils/constants\";\r\nimport { convertPressure } from \"../../utils/constants\";\r\nimport { generateIconClass } from \"../../utils/constants\";\r\nimport { convertTemperatureUnits } from \"../../utils/constants\";\r\nimport { convertWindUnits } from \"../../utils/constants\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class CurrentForecast extends Component {\r\n    renderTemplate() {\r\n        const { name, dt, main, wind, weather } = this.props.forecastData;\r\n\r\n        const setIconClassName = `weather-icon-current ${generateIconClass(\r\n            weather[0].icon\r\n        )}`;\r\n\r\n        return (\r\n            <div className=\"forecast-current\">\r\n                <div className=\"city-name\">{name}</div>\r\n                <div className=\"forecast-details\">\r\n                    <div className=\"forecast-item\">\r\n                        <div className=\"forecast-item-text forecast-item-text-day\">\r\n                            {getDayFromDateString(dt)}\r\n                        </div>\r\n                        <div className=\"forecast-item-text forecast-item-text-icon forecast-item-text-icon-date\">\r\n                            {getcurrentDateString(dt)}\r\n                        </div>\r\n\r\n                        <div className=\"forecast-item-text forecast-item-text-icon forecast-item-text-icon-pressure\">\r\n                            {`${convertPressure(main.pressure)} mm Hg`}\r\n                        </div>\r\n                        <div className=\"forecast-item-text forecast-item-text-icon forecast-item-text-icon-wind\">\r\n                            {`${convertWindUnits(\r\n                                wind.speed\r\n                            )}, ${defineWindDirection(wind.deg)}`}\r\n                        </div>\r\n\r\n                        <div className=\"forecast-item-text forecast-item-text-icon forecast-item-text-icon-humidity\">\r\n                            <span className=\"humidity-icon\" />\r\n                            {main.humidity} %\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"forecast-item\">\r\n                        <div className={setIconClassName}></div>\r\n                        <div className=\"weather-icon-description\">\r\n                            {weather[0].description}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"forecast-item\">\r\n                        <div className=\"forecast-item-temps\">\r\n                            <div className=\"temp-min\">\r\n                                {convertTemperatureUnits(main.temp_min, \"C\")}\r\n                            </div>\r\n                            <div className=\"temp-max\">\r\n                                {convertTemperatureUnits(main.temp_max, \"C\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"forecast-item-tempcurrent\">\r\n                            {convertTemperatureUnits(main.temp, \"C\")}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.renderTemplate();\r\n    }\r\n}\r\n\r\nexport default CurrentForecast;\r\n\r\nCurrentForecast.propTypes = {\r\n    forecastData: PropTypes.object\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { formatDateValue } from \"../../utils/constants\";\r\nimport { generateIconClass } from \"../../utils/constants\";\r\nimport { getDayFromDateString } from \"../../utils/constants\";\r\nimport { convertTemperatureUnits } from \"../../utils/constants\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class WeatherForecastItem extends Component {\r\n    render() {\r\n        console.log(\"itemForecast\", this.props);\r\n\r\n        const { place, forecastData } = this.props;\r\n\r\n        const setIconClassName = `day-forecast-weather ${generateIconClass(\r\n            forecastData.weather[0].icon\r\n        )}`;\r\n\r\n        return (\r\n            <div\r\n                className=\"forecast-nearest-day-item\"\r\n                onClick={() => this.props.updateHandler(forecastData)}\r\n            >\r\n                <h3 className=\"day-title\">\r\n                    {formatDateValue(forecastData.dt_txt)}\r\n                </h3>\r\n                <div className=\"day-forecast-dayname\">\r\n                    {getDayFromDateString(forecastData.dt, \"short\")}\r\n                </div>\r\n                <div className=\"day-forecast-temp\">\r\n                    {convertTemperatureUnits(forecastData.main.temp, \"C\")}\r\n                </div>\r\n                <div className={setIconClassName} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeatherForecastItem;\r\n\r\nWeatherForecastItem.propTypes = {\r\n    forecastData: PropTypes.object,\r\n    place: PropTypes.string\r\n};\r\n","export const updateCurrentForecast = data => ({\r\n    type: \"CURRENT_FORECAST\",\r\n    payload: data\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { CurrentForecast } from \"../CurrentForecast\";\r\nimport { WeatherForecastItem } from \"../WeatherForecastItem\";\r\nimport uuid from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCurrentForecast } from \"../../actions/updateCurrentForecast\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class WeatherForecast extends Component {\r\n    renderTemplate() {\r\n        const {\r\n            data,\r\n            isFetching,\r\n            place,\r\n            currentForecast,\r\n            setCurrentForecast\r\n        } = this.props;\r\n\r\n        // console.log(this.props);\r\n\r\n        const { currentForecastData } = currentForecast;\r\n        const dataCode = data ? data[0].cod : null;\r\n\r\n        const createSortedList = list => {\r\n            const hoursForecastList = [];\r\n            const indexesList = [3, 11, 19, 27, 35];\r\n\r\n            indexesList.forEach(item => {\r\n                hoursForecastList.push(list[item]);\r\n            });\r\n\r\n            return hoursForecastList;\r\n        };\r\n\r\n        const renderCurrentForecast = () => {\r\n            if (data) {\r\n                if (dataCode !== \"404\") {\r\n                    return (\r\n                        <CurrentForecast\r\n                            forecastData={data ? data[0] : null}\r\n                        ></CurrentForecast>\r\n                    );\r\n                } else {\r\n                    return <p>City not found!</p>;\r\n                }\r\n            } else {\r\n                return \"\";\r\n            }\r\n        };\r\n\r\n        const renderCurrentForecastFromItems = () => {\r\n            const placeObj = {\r\n                name: place\r\n            };\r\n\r\n            const finalCurrentForecastData = Object.assign(\r\n                currentForecastData,\r\n                placeObj\r\n            );\r\n\r\n            return finalCurrentForecastData ? (\r\n                <CurrentForecast\r\n                    forecastData={\r\n                        finalCurrentForecastData\r\n                            ? finalCurrentForecastData\r\n                            : null\r\n                    }\r\n                ></CurrentForecast>\r\n            ) : (\r\n                \"\"\r\n            );\r\n        };\r\n\r\n        const finalDaysForecastList =\r\n            data && dataCode === 200 ? createSortedList(data[1].list) : null;\r\n\r\n        const weatherForecastItemsList = finalDaysForecastList\r\n            ? finalDaysForecastList.map(item => {\r\n                  return (\r\n                      <WeatherForecastItem\r\n                          forecastData={item}\r\n                          place={place}\r\n                          key={uuid.v4()}\r\n                          updateHandler={setCurrentForecast}\r\n                      ></WeatherForecastItem>\r\n                  );\r\n              })\r\n            : \"\";\r\n\r\n        const renderForecastDaysList = () => {\r\n            if (data) {\r\n                if (dataCode !== \"404\") {\r\n                    return (\r\n                        <div className=\"forecast-nearest-days\">\r\n                            {weatherForecastItemsList}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            } else {\r\n                return \"\";\r\n            }\r\n        };\r\n\r\n        if (isFetching) {\r\n            return <p className=\"loading\">Loading...</p>;\r\n        } else {\r\n            return (\r\n                <div className=\"search-results-container\">\r\n                    {!currentForecastData\r\n                        ? renderCurrentForecast()\r\n                        : renderCurrentForecastFromItems()}\r\n                    {renderForecastDaysList()}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.renderTemplate();\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    // console.log(store);\r\n    return {\r\n        currentForecast: store.currentForecastData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setCurrentForecast: data => dispatch(updateCurrentForecast(data))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(WeatherForecast);\r\n\r\n// export default WeatherForecast;\r\n\r\nWeatherForecast.propTypes = {\r\n    data: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    error: PropTypes.string,\r\n    isFetching: PropTypes.bool\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport class HistoryListItem extends Component {\r\n    render() {\r\n        return <li className=\"user-activity-list-item\">Dresden, DE</li>;\r\n    }\r\n}\r\n\r\nexport default HistoryListItem;\r\n","import React, { Component } from \"react\";\r\nimport { HistoryListItem } from \"../HistoryListItem\";\r\n\r\nexport class HistoryList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-activity-item\">\r\n                <div className=\"user-activity-header\">\r\n                    <h3 className=\"user-activity-title user-activity-title-history\">\r\n                        recently viewed\r\n                    </h3>\r\n                    <button className=\"remove-button\" />\r\n                </div>\r\n                <div className=\"user-activity-content\">\r\n                    <ul className=\"user-activity-list\">\r\n                        <HistoryListItem></HistoryListItem>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryList;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class FavouritesListItem extends Component {\r\n    render() {\r\n        return <li className=\"user-activity-list-item\">Braga, PT</li>;\r\n    }\r\n}\r\n\r\nexport default FavouritesListItem;\r\n","import React, { Component } from \"react\";\r\nimport { FavouritesListItem } from \"../FavouritesListItem\";\r\n\r\nexport class FavouritesList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-activity-item\">\r\n                <div className=\"user-activity-header\">\r\n                    <h3 className=\"user-activity-title user-activity-title-fav\">\r\n                        favourite\r\n                    </h3>\r\n                    <button className=\"remove-button\" />\r\n                </div>\r\n                <div className=\"user-activity-content\">\r\n                    <ul className=\"user-activity-list\">\r\n                        <FavouritesListItem></FavouritesListItem>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FavouritesList;\r\n","import React, { Component } from \"react\";\r\nimport { HistoryList } from \"../HistoryList\";\r\nimport { FavouritesList } from \"../FavouritesList\";\r\n\r\nexport class UserActions extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"user-activity-wrap\">\r\n                <FavouritesList></FavouritesList>\r\n                <HistoryList></HistoryList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserActions;\r\n","import React, { Component } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport \"./ThemeColorSwitcher.scss\";\r\n\r\nexport class ThemeColorSwitcher extends Component {\r\n    changeColorThemeHandler({ target }) {\r\n        const { value } = target;\r\n        this.props.handleThemeColorChange(value);\r\n    }\r\n\r\n    renderTemplate() {\r\n        const colorsList = [\"dark\", \"blue\", \"yellow\"];\r\n        // console.log(this.props);\r\n\r\n        return colorsList.map(color => {\r\n            return (\r\n                <div className=\"color-switcher__item\" key={uuid.v4()}>\r\n                    <label className=\"color-switcher-label\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"color\"\r\n                            value={color}\r\n                            className=\"color-switcher-input hidden-input\"\r\n                            onChange={this.changeColorThemeHandler.bind(this)}\r\n                            // {...(color === \"Dark\" ? { \"defaultChecked\" } : {})}\r\n                        />\r\n                        <span className=\"color-switcher-name\">{color}</span>\r\n                    </label>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"color-switcher\">\r\n                <p>Choose color theme: </p>\r\n                {this.renderTemplate()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemeColorSwitcher;\r\n","import { apiKey } from \"../utils/constants\";\r\nimport { currentWeaterURLString } from \"../utils/constants\";\r\nimport { weatherForecastURLString } from \"../utils/constants\";\r\n\r\nexport class HttpService {\r\n    getWeatherURLS(url, city) {\r\n        return `${url}${city}&appid=${apiKey}&units=metric`;\r\n    }\r\n\r\n    getWeatherData(city) {\r\n        const urlsArray = [\r\n            this.getWeatherURLS(currentWeaterURLString, city),\r\n            this.getWeatherURLS(weatherForecastURLString, city)\r\n        ];\r\n\r\n        return Promise.all(urlsArray.map(u => fetch(u))).then(responses =>\r\n            Promise.all(responses.map(res => res.json()))\r\n        );\r\n    }\r\n\r\n    getForecast(url, city) {\r\n        const requestURL = `${url}${city}&appid=${apiKey}&units=metric`;\r\n\r\n        return fetch(requestURL)\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n}\r\n\r\nexport default HttpService;\r\n","import { HttpService } from \"../services/dataService\";\r\n\r\nexport const REQUEST = \"REQUEST\";\r\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\r\nexport const REQUEST_FAIL = \"REQUEST_FAIL\";\r\n\r\nexport const handleForecastData = city => dispatch => {\r\n    dispatch({\r\n        type: REQUEST\r\n    });\r\n\r\n    const httpService = new HttpService();\r\n\r\n    httpService\r\n        .getWeatherData(city)\r\n        .then(res => {\r\n            const data = res;\r\n            dispatch({\r\n                type: REQUEST_SUCCESS,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUEST_FAIL,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SearchBar } from \"../components/Searchbar\";\nimport { WeatherForecast } from \"../components/WeatherForecast\";\nimport { UserActions } from \"../components/UserActions\";\nimport { ThemeColorSwitcher } from \"../components/ThemeColorSwitcher\";\nimport { setPlace } from \"../actions/placeAction\";\nimport { handleForecastData } from \"../actions/forecastDataAction\";\nimport { updateCurrentForecast } from \"../actions/updateCurrentForecast\";\nimport { setThemeColor } from \"../actions/themeColorAction\";\nimport \"../styles/scss/main.scss\";\n\nclass App extends Component {\n    render() {\n        const {\n            setPlaceAction,\n            getForecastDataAction,\n            forecastData,\n            place,\n            setCurrentForecast,\n            setThemeColor,\n            themeColor\n        } = this.props;\n\n        // console.log(this.props);\n\n        const themeColorClass = this.props.themeColor;\n\n        return (\n            <div className={`App ${themeColorClass}`}>\n                <main className=\"main\">\n                    <div className=\"app-container\">\n                        <h1 className=\"main-title\">Weather application</h1>\n                        <ThemeColorSwitcher\n                            handleThemeColorChange={setThemeColor}\n                            color={themeColor}\n                        ></ThemeColorSwitcher>\n                        <SearchBar\n                            handleForecastData={getForecastDataAction}\n                            handleCurrentForecastData={setCurrentForecast}\n                            place={setPlaceAction}\n                        ></SearchBar>\n                        <WeatherForecast\n                            data={forecastData.data}\n                            isFetching={forecastData.isFetching}\n                            place={place}\n                        ></WeatherForecast>\n                        <UserActions></UserActions>\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    console.log(store);\n    return {\n        // isFavourite: store.search.isFavourite,\n        // unit: store.unit,\n        themeColor: store.color.color,\n        forecastData: store.forecastData,\n        place: store.place.place\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setPlaceAction: place => dispatch(setPlace(place)),\n        getForecastDataAction: city => dispatch(handleForecastData(city)),\n        setCurrentForecast: data => dispatch(updateCurrentForecast(data)),\n        setThemeColor: color => dispatch(setThemeColor(color))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","export const setPlace = place => ({\r\n    type: \"SET_PLACE\",\r\n    payload: place\r\n});\r\n","export const setThemeColor = color => ({\r\n    type: \"SET_THEME_COLOR\",\r\n    payload: color\r\n});\r\n","export const initialState = {\r\n    unit: \"Metric\"\r\n};\r\n\r\nexport function unitsReducer(state = initialState) {\r\n    return state;\r\n}\r\n","export const initialState = {\r\n    place: \"Kyiv\",\r\n    isFavourite: false\r\n};\r\n\r\nexport function placeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_PLACE\":\r\n            return { ...state, place: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const initialState = {\r\n    color: \"dark\"\r\n};\r\n\r\nexport function themeColorReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_THEME_COLOR\":\r\n            return { ...state, color: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    REQUEST,\r\n    REQUEST_SUCCESS,\r\n    REQUEST_FAIL\r\n} from \"../actions/forecastDataAction\";\r\n\r\nexport const initialState = {\r\n    data: null,\r\n    isFetching: false\r\n};\r\n\r\nexport function forecastReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case REQUEST:\r\n            return { ...state, isFetching: true };\r\n        case REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                data: action.payload\r\n            };\r\n        case REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                data: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const initialState = {\r\n    currentForecastData: null\r\n};\r\n\r\nexport function currentForecastReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"CURRENT_FORECAST\":\r\n            return { ...state, currentForecastData: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { unitsReducer } from \"./units\";\r\nimport { placeReducer } from \"./place\";\r\nimport { themeColorReducer } from \"./theme\";\r\nimport { forecastReducer } from \"./forecast\";\r\nimport { currentForecastReducer } from \"./currentForecast\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    units: unitsReducer,\r\n    place: placeReducer,\r\n    color: themeColorReducer,\r\n    forecastData: forecastReducer,\r\n    currentForecastData: currentForecastReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\n// import logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/configureStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}