{"version":3,"sources":["components/Searchbar/SearchBar.js","components/CurrentForecast/CurrentForecast.js","utils/constants.js","components/WeatherForecastItem/WeatherForecastItem.js","components/WeatherForecast/WeatherForecast.js","components/HistoryListItem/HistoryListItem.js","components/HistoryList/HistoryList.js","components/FavouritesListItem/FavouritesListItem.js","components/FavouritesList/FavouritesList.js","components/UserActions/UserActions.js","services/dataService.js","actions/forecastDataAction.js","containers/App.js","actions/placeAction.js","reducers/units.js","reducers/place.js","reducers/theme.js","reducers/forecast.js","reducers/index.js","store/configureStore.js","index.js"],"names":["SearchBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputRef","React","createRef","inherits","createClass","key","value","place","formattedPlaceName","formatted_address","split","handleForecastData","current","refs","input","react_default","a","createElement","className","react_google_autocomplete_default","onPlaceSelected","performSearch","bind","autoFocus","ref","Component","CurrentForecast","apply","arguments","console","log","forecastData","apiKey","WeatherForecastItem","WeatherForecast","list","hoursForecastList","forEach","item","push","_this$props","data","isFetching","error","finalDaysForecastList","createSortedList","weatherForecastItemsList","map","components_WeatherForecastItem_WeatherForecastItem","uuid","v4","components_CurrentForecast_CurrentForecast","renderTemplate","HistoryListItem","HistoryList","components_HistoryListItem_HistoryListItem","FavouritesListItem","FavouritesList","components_FavouritesListItem_FavouritesListItem","UserActions","components_FavouritesList_FavouritesList","components_HistoryList_HistoryList","HttpService","url","city","concat","urlsArray","getWeatherURLS","Promise","all","u","fetch","then","responses","res","json","requestURL","response","catch","REQUEST","REQUEST_SUCCESS","REQUEST_FAIL","App","setPlaceAction","getForecastDataAction","Searchbar_SearchBar","components_WeatherForecast_WeatherForecast","components_UserActions_UserActions","connect","store","dispatch","type","payload","setPlace","getWeatherData","err","initialState","unit","isFavourite","color","rootReducer","combineReducers","units","length","undefined","state","action","objectSpread","themeColor","message","createStore","applyMiddleware","thunk","logger","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"uRAwCeA,EApCf,SAAAC,GACI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,SAAWC,IAAMC,YAFPT,EADvB,OAAAC,OAAAS,EAAA,EAAAT,CAAAJ,EAAAC,GAAAG,OAAAU,EAAA,EAAAV,CAAAJ,EAAA,EAAAe,IAAA,gBAAAC,MAAA,SAMkBC,GAEV,IAAMC,EAAqBD,EAAME,kBAAkBC,MAAM,KAAK,GAE9Dd,KAAKJ,MAAMe,MAAMC,GACjBZ,KAAKJ,MAAMmB,mBAAmBH,GAC9BZ,KAAKI,SAASY,QAAQC,KAAKC,MAAMR,MAAQ,KAZjD,CAAAD,IAAA,SAAAC,MAAA,WAkBQ,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAClBH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACIE,UAAU,oBACVE,gBAAiBxB,KAAKyB,cAAcC,KAAK1B,MACzC2B,WAAS,EACTC,IAAK5B,KAAKI,WAEde,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBACdH,EAAAC,EAAAC,cAAA,UAAQX,MAAM,WAAd,SACAS,EAAAC,EAAAC,cAAA,UAAQX,MAAM,cAAd,eA7BpBhB,EAAA,CAA+BmC,aCsChBC,EAvCf,SAAAnC,GAAA,SAAAmC,IAAA,OAAAhC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,GAAAhC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAAC,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAAgC,EAAAnC,GAAAG,OAAAU,EAAA,EAAAV,CAAAgC,EAAA,EAAArB,IAAA,SAAAC,MAAA,WAIQ,OAFAuB,QAAQC,IAAI,eAAgBlC,KAAKJ,MAAMuC,cAGnChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CAAf,YAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAAf,cAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAAf,SAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBADpB,QAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAf,UAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,WAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAAf,gBA/BxBQ,EAAA,CAAqCD,aCIxBO,EAAS,mCCePC,EAff,SAAA1C,GAAA,SAAA0C,IAAA,OAAAvC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GAAAvC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuC,GAAAN,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAAuC,EAAA1C,GAAAG,OAAAU,EAAA,EAAAV,CAAAuC,EAAA,EAAA5B,IAAA,SAAAC,MAAA,WAIQ,OAFAuB,QAAQC,IAAI,eAAgBlC,KAAKJ,OAG7BuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDAT/Be,EAAA,CAAyCR,8BCqD1BS,EAtDf,SAAA3C,GAAA,SAAA2C,IAAA,OAAAxC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,GAAAxC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAP,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAAwC,EAAA3C,GAAAG,OAAAU,EAAA,EAAAV,CAAAwC,EAAA,EAAA7B,IAAA,mBAAAC,MAAA,SACqB6B,GACb,IAAMC,EAAoB,GAO1B,MANoB,CAAC,EAAG,GAAI,GAAI,GAAI,IAExBC,QAAQ,SAAAC,GAChBF,EAAkBG,KAAKJ,EAAKG,MAGzBF,IATf,CAAA/B,IAAA,iBAAAC,MAAA,WAYqB,IAAAkC,EAC8B5C,KAAKJ,MAAxCiD,EADKD,EACLC,KAAMC,EADDF,EACCE,WAAYC,EADbH,EACaG,MAAOpC,EADpBiC,EACoBjC,MAC3BqC,EAAwBH,EACxB7C,KAAKiD,iBAAiBJ,EAAK,GAAGN,MAC9B,KACAW,EAA2BF,EAC3BA,EAAsBG,IAAI,SAAAT,GACtB,OACIvB,EAAAC,EAAAC,cAAC+B,EAAD,CACIjB,aAAcO,EACd/B,MAAOA,EACPF,IAAK4C,IAAKC,SAItB,GAEN,OAAIP,EACO5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,UAGPwB,EACO3B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,cAGHH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAACkC,EAAD,CACIpB,aAAcU,EAAOA,EAAK,GAAK,OAEnC1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACV4B,MA1CzB,CAAAzC,IAAA,SAAAC,MAAA,WAkDQ,OAAOV,KAAKwD,qBAlDpBlB,EAAA,CAAqCT,aCEtB4B,EANf,SAAA9D,GAAA,SAAA8D,IAAA,OAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,GAAA3D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2D,GAAA1B,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAA2D,EAAA9D,GAAAG,OAAAU,EAAA,EAAAV,CAAA2D,EAAA,EAAAhD,IAAA,SAAAC,MAAA,WAEQ,OAAOS,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,mBAFfmC,EAAA,CAAqC5B,aCqBtB6B,EApBf,SAAA/D,GAAA,SAAA+D,IAAA,OAAA5D,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,GAAA5D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAA3B,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAA4D,EAAA/D,GAAAG,OAAAU,EAAA,EAAAV,CAAA4D,EAAA,EAAAjD,IAAA,SAAAC,MAAA,WAEQ,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mDAAd,mBAGAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAEtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAACsC,EAAD,aAZxBD,EAAA,CAAiC7B,aCKlB+B,EANf,SAAAjE,GAAA,SAAAiE,IAAA,OAAA9D,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,GAAA9D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAA7B,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAA8D,EAAAjE,GAAAG,OAAAU,EAAA,EAAAV,CAAA8D,EAAA,EAAAnD,IAAA,SAAAC,MAAA,WAEQ,OAAOS,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,iBAFfsC,EAAA,CAAwC/B,aCqBzBgC,EApBf,SAAAlE,GAAA,SAAAkE,IAAA,OAAA/D,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,GAAA/D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA9B,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAA+D,EAAAlE,GAAAG,OAAAU,EAAA,EAAAV,CAAA+D,EAAA,EAAApD,IAAA,SAAAC,MAAA,WAEQ,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+CAAd,aAGAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAEtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAACyC,EAAD,aAZxBD,EAAA,CAAoChC,aCarBkC,EAZf,SAAApE,GAAA,SAAAoE,IAAA,OAAAjE,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,GAAAjE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAAhC,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAAiE,EAAApE,GAAAG,OAAAU,EAAA,EAAAV,CAAAiE,EAAA,EAAAtD,IAAA,SAAAC,MAAA,WAGQ,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAC4C,EAAD,WANhBF,EAAA,CAAiClC,aCApBqC,EAAb,oBAAAA,IAAApE,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,GAAA,OAAApE,OAAAU,EAAA,EAAAV,CAAAoE,EAAA,EAAAzD,IAAA,iBAAAC,MAAA,SACmByD,EAAKC,GAChB,SAAAC,OAAUF,GAAVE,OAAgBD,EAAhB,WAAAC,OAA8BjC,EAA9B,mBAFR,CAAA3B,IAAA,iBAAAC,MAAA,SAKmB0D,GACX,IAAME,EAAY,CACdtE,KAAKuE,eRPb,qDQOoDH,GAC5CpE,KAAKuE,eRNb,sDQMsDH,IAGlD,OAAOI,QAAQC,IAAIH,EAAUnB,IAAI,SAAAuB,GAAC,OAAIC,MAAMD,MAAKE,KAAK,SAAAC,GAAS,OAC3DL,QAAQC,IAAII,EAAU1B,IAAI,SAAA2B,GAAG,OAAIA,EAAIC,cAZjD,CAAAtE,IAAA,cAAAC,MAAA,SAgBgByD,EAAKC,GACb,IAAMY,EAAU,GAAAX,OAAMF,GAANE,OAAYD,EAAZ,WAAAC,OAA0BjC,EAA1B,iBAEhB,OAAOuC,MAAMK,GACRJ,KAAK,SAAAK,GAAQ,OAAIA,EAASF,SAC1BG,MAAM,SAAAnC,GAAK,OAAId,QAAQc,MAAMA,SArB1CmB,EAAA,GCFaiB,EAAU,UACVC,EAAkB,kBAClBC,EAAe,eCKtBC,0LACO,IAAA1C,EAMD5C,KAAKJ,MAJL2F,EAFC3C,EAED2C,eACAC,EAHC5C,EAGD4C,sBACArD,EAJCS,EAIDT,aACAxB,EALCiC,EAKDjC,MAKJ,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,uBACAH,EAAAC,EAAAC,cAACoE,EAAD,CACI1E,mBAAoByE,EACpB7E,MAAO4E,IAEXpE,EAAAC,EAAAC,cAACqE,EAAD,CACI7C,KAAMV,EAAaU,KACnBE,MAAOZ,EAAaY,MACpBD,WAAYX,EAAaW,WACzBnC,MAAOA,IAEXQ,EAAAC,EAAAC,cAACsE,EAAD,gBA1BN9D,cAoDH+D,cAlBS,SAAAC,GAEpB,OADA5D,QAAQC,IAAI2D,GACL,CAIH1D,aAAc0D,EAAM1D,aACpBxB,MAAOkF,EAAMlF,MAAMA,QAIA,SAAAmF,GACvB,MAAO,CACHP,eAAgB,SAAA5E,GAAK,OAAImF,ECxDT,SAAAnF,GAAK,MAAK,CAC9BoF,KAAM,YACNC,QAASrF,GDsD6BsF,CAAStF,KAC3C6E,sBAAuB,SAAApB,GAAI,OAAI0B,EDnDL,SAAA1B,GAAI,OAAI,SAAA0B,GACtCA,EAAS,CACLC,KAAMZ,KAGU,IAAIjB,GAGnBgC,eAAe9B,GACfQ,KAAK,SAAAE,GAEFgB,EAAS,CACLC,KAAMX,EACNY,QAHSlB,MAMhBI,MAAM,SAAAiB,GACHL,EAAS,CACLC,KAAMV,EACNW,QAASG,EACTpD,OAAO,OC+ByBhC,CAAmBqD,OAIpDwB,CAGbN,UEhEWc,EAAe,CACxBC,KAAM,qBCDGD,EAAe,CACxBzF,MAAO,OACP2F,aAAa,GCFV,IAAMF,EAAe,CACxBG,MAAO,QCKJ,IAAMH,EAAe,CACxBvD,KAAM,KACNC,YAAY,EACZC,MAAO,ICHJ,IAAMyD,EAAcC,YAAgB,CACvCC,MJHG,WACH,OAD+C1E,UAAA2E,OAAA,QAAAC,IAAA5E,UAAA,GAAAA,UAAA,GAAdoE,GIIjCzF,MHHG,WAAoD,IAA9BkG,EAA8B7E,UAAA2E,OAAA,QAAAC,IAAA5E,UAAA,GAAAA,UAAA,GAAtBoE,EAAcU,EAAQ9E,UAAA2E,OAAA,EAAA3E,UAAA,QAAA4E,EACvD,OAAQE,EAAOf,MACX,IAAK,YACD,OAAOjG,OAAAiH,EAAA,EAAAjH,CAAA,GAAK+G,EAAZ,CAAmBlG,MAAOmG,EAAOd,UACrC,QACI,OAAOa,IGDfG,WFLG,WACH,OADoDhF,UAAA2E,OAAA,QAAAC,IAAA5E,UAAA,GAAAA,UAAA,GAAdoE,GEMtCjE,aDEG,WAAuD,IAA9B0E,EAA8B7E,UAAA2E,OAAA,QAAAC,IAAA5E,UAAA,GAAAA,UAAA,GAAtBoE,EAAcU,EAAQ9E,UAAA2E,OAAA,EAAA3E,UAAA,QAAA4E,EAC1D,OAAQE,EAAOf,MACX,KAAKZ,EACD,OAAOrF,OAAAiH,EAAA,EAAAjH,CAAA,GAAK+G,EAAZ,CAAmB/D,YAAY,EAAMC,MAAO,KAChD,KAAKqC,EACD,OAAOtF,OAAAiH,EAAA,EAAAjH,CAAA,GACA+G,EADP,CAEI/D,YAAY,EACZD,KAAMiE,EAAOd,QACbjD,MAAO,KAEf,KAAKsC,EACD,OAAOvF,OAAAiH,EAAA,EAAAjH,CAAA,GACA+G,EADP,CAEI/D,YAAY,EACZC,MAAO+D,EAAOd,QAAQiB,UAE9B,QACI,OAAOJ,+BEzBNhB,EAAQqB,YAAYV,EAAaW,YAAgBC,IAAOC,MCErEC,IAASC,OACLpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAU3B,MAAOA,GACb1E,EAAAC,EAAAC,cAACoG,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.4c3f6e59.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    performSearch(place) {\r\n        // console.log(place);\r\n        const formattedPlaceName = place.formatted_address.split(\",\")[0];\r\n        // console.log(formattedPlaceName);\r\n        this.props.place(formattedPlaceName);\r\n        this.props.handleForecastData(formattedPlaceName);\r\n        this.inputRef.current.refs.input.value = \"\";\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props);\r\n\r\n        return (\r\n            <div className=\"search-block\">\r\n                <button className=\"add-to-favourite\" />\r\n                <Autocomplete\r\n                    className=\"main-search-input\"\r\n                    onPlaceSelected={this.performSearch.bind(this)}\r\n                    autoFocus\r\n                    ref={this.inputRef}\r\n                />\r\n                <select className=\"temperature-units\">\r\n                    <option value=\"Celsius\">°C</option>\r\n                    <option value=\"Farengheit\">°F</option>\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\nSearchBar.propTypes = {\r\n    handleForecastData: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class CurrentForecast extends Component {\r\n    render() {\r\n        console.log(\"forecastData\", this.props.forecastData);\r\n\r\n        return (\r\n            <div className=\"forecast-current\">\r\n                <div className=\"city-name\">Gdansk, Poland</div>\r\n                <div className=\"forecast-details\">\r\n                    <div className=\"forecast-item\">\r\n                        <div className=\"forecast-item-text forecast-item-text-day\">\r\n                            Saturday\r\n                        </div>\r\n                        <div className=\"forecast-item-text forecast-item-text-date\">\r\n                            02/03/2019\r\n                        </div>\r\n                        <div className=\"forecast-item-text forecast-item-text-wind\">\r\n                            5 m/s\r\n                        </div>\r\n                        <div className=\"forecast-item-text forecast-item-text-humidity\">\r\n                            <span className=\"humidity-icon\" />\r\n                            55%\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"forecast-item\">\r\n                        <div className=\"weather-icon-current\">Sunny</div>\r\n                    </div>\r\n                    <div className=\"forecast-item\">\r\n                        <div className=\"forecast-item-temps\">\r\n                            <div className=\"temp-min\">-3°</div>\r\n                            <div className=\"temp-max\">10°</div>\r\n                        </div>\r\n                        <div className=\"forecast-item-tempcurrent\">3°</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrentForecast;\r\n\r\nCurrentForecast.propTypes = {\r\n    forecastData: PropTypes.object\r\n};\r\n","const pascalToMmHg = 0.75006;\r\nconst coefficientImperial = 2.2369;\r\n\r\nexport const currentWeaterURLString =\r\n    \"https://api.openweathermap.org/data/2.5/weather?q=\";\r\nexport const weatherForecastURLString =\r\n    \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\nexport const apiKey = \"c1bfe9b98646ae15af74164518f99538\";\r\n\r\nexport const scrollableBlockWrapClassFavourite = \"user-activity-list-favourite\";\r\n\r\nexport const scrollableBlockWrapClassHistory = \"user-activity-list-history\";\r\n\r\nexport const formatValue = value => (value ? Math.round(value) : \"\");\r\n\r\nexport const checkProperty = property => (property ? property : \"\");\r\n\r\nexport const getCurrentDate = () => {\r\n    const currDate = new Date();\r\n    const day = String(currDate.getDate()).padStart(2, \"0\");\r\n    const month = String(currDate.getMonth() + 1).padStart(2, \"0\");\r\n    const year = currDate.getFullYear();\r\n    const finalDate = `${day}/${month}/${year}`;\r\n\r\n    return finalDate;\r\n};\r\n\r\nexport const getcurrentDateString = milliseconds => {\r\n    if (!milliseconds) {\r\n        return;\r\n    }\r\n\r\n    const date = new Date(milliseconds);\r\n    return new Intl.DateTimeFormat(\"en-GB\").format(date * 1000);\r\n};\r\n\r\nexport const getCurrentDayName = () => {\r\n    const currDate = new Date();\r\n    const days = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\"\r\n    ];\r\n    const day = new Date(currDate);\r\n    const dayName = days[day.getDay()];\r\n\r\n    return dayName;\r\n};\r\n\r\nexport const convertPressure = pressureValue => {\r\n    if (!pressureValue) {\r\n        return \"\";\r\n    }\r\n\r\n    return Math.round(pressureValue * pascalToMmHg);\r\n};\r\n\r\nexport const defineWindDirection = degrees => {\r\n    let windDirectionString = \"\";\r\n\r\n    if (!degrees) {\r\n        return \"\";\r\n    } else {\r\n        if (degrees <= 22.5 || (degrees > 337.5 && degrees <= 360)) {\r\n            windDirectionString = \"North\";\r\n        } else if (degrees > 22.5 && degrees < 67.5) {\r\n            windDirectionString = \"North-East\";\r\n        } else if (degrees > 67.5 && degrees < 112.5) {\r\n            windDirectionString = \"East\";\r\n        } else if (degrees > 112.5 && degrees < 157.5) {\r\n            windDirectionString = \"South-East\";\r\n        } else if (degrees > 157.5 && degrees < 202.5) {\r\n            windDirectionString = \"South\";\r\n        } else if (degrees > 202.5 && degrees < 247.5) {\r\n            windDirectionString = \"South-West\";\r\n        } else if (degrees > 247.5 && degrees < 292.5) {\r\n            windDirectionString = \"West\";\r\n        } else if (degrees > 292.5 && degrees < 337.5) {\r\n            windDirectionString = \"North-West\";\r\n        }\r\n\r\n        return windDirectionString;\r\n    }\r\n};\r\n\r\nexport const formatDateValue = dateString => {\r\n    if (!dateString) {\r\n        return;\r\n    }\r\n\r\n    const firstStringPartArray = dateString.split(\" \")[0].split(\"-\");\r\n\r\n    return `${firstStringPartArray[2]}/${firstStringPartArray[1]}`;\r\n};\r\n\r\nexport const generateIconClass = iconString => {\r\n    let finalIconClass = \"\";\r\n\r\n    if (!iconString) {\r\n        return;\r\n    } else {\r\n        if (iconString === \"01d\" || iconString === \"01n\") {\r\n            finalIconClass = \"day-forecast-weather-sunny\";\r\n        } else if (iconString === \"02d\" || iconString === \"02n\") {\r\n            finalIconClass = \"day-forecast-weather-cloudy-small\";\r\n        } else if (\r\n            iconString === \"03d\" ||\r\n            iconString === \"04d\" ||\r\n            iconString === \"50d\" ||\r\n            iconString === \"03n\" ||\r\n            iconString === \"04n\" ||\r\n            iconString === \"50n\"\r\n        ) {\r\n            finalIconClass = \"day-forecast-weather-cloudy\";\r\n        } else if (iconString === \"09d\" || iconString === \"09n\") {\r\n            finalIconClass = \"day-forecast-weather-shower-rain\";\r\n        } else if (iconString === \"10d\" || iconString === \"10n\") {\r\n            finalIconClass = \"day-forecast-weather-rain\";\r\n        } else if (iconString === \"11d\" || iconString === \"11n\") {\r\n            finalIconClass = \"day-forecast-weather-thunder\";\r\n        } else if (iconString === \"13d\" || iconString === \"13n\") {\r\n            finalIconClass = \"day-forecast-weather-snow\";\r\n        } else {\r\n            finalIconClass = \"\";\r\n        }\r\n    }\r\n\r\n    return finalIconClass;\r\n};\r\n\r\nexport const generateID = () => {\r\n    return (\r\n        \"_\" +\r\n        Math.random()\r\n            .toString(36)\r\n            .substr(2, 9)\r\n    );\r\n};\r\n\r\nexport const getDayFromDateString = (milliseconds, type = \"long\") => {\r\n    return new Intl.DateTimeFormat(\"en-US\", { weekday: type }).format(\r\n        milliseconds * 1000\r\n    );\r\n};\r\n\r\nexport const convertTemperatureUnits = (value, units) => {\r\n    if (!value) {\r\n        return;\r\n    }\r\n\r\n    return units === \"C\"\r\n        ? `${Math.round(value)} &deg;C`\r\n        : `${Math.round(value * 1.8 + 32)} &deg;F`;\r\n};\r\n\r\nexport const convertWindUnits = (value, units) => {\r\n    if (!value) {\r\n        return \"\";\r\n    }\r\n\r\n    return units === \"C\"\r\n        ? `${value.toFixed(1)} m/s`\r\n        : `${(value * coefficientImperial).toFixed(1)} mph`;\r\n};\r\n\r\nexport const putItemToLocalStorage = (key, list) => {\r\n    localStorage.setItem(key, JSON.stringify(list));\r\n};\r\n\r\nexport const checkResponse = response => {\r\n    if (response.data.status === \"ok\") {\r\n        return true;\r\n    } else if (response.data.message) {\r\n        const message = response.data.message.split(\"_\").join(\" \");\r\n        throw new Error(message);\r\n    }\r\n    throw new Error(\"Something wrong\");\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { formatDateValue } from \"../../utils/constants\";\r\nimport { generateIconClass } from \"../../utils/constants\";\r\nimport { getDayFromDateString } from \"../../utils/constants\";\r\nimport { convertTemperatureUnits } from \"../../utils/constants\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class WeatherForecastItem extends Component {\r\n    render() {\r\n        console.log(\"itemForecast\", this.props);\r\n\r\n        return (\r\n            <div className=\"forecast-nearest-day-item\">\r\n                <h3 className=\"day-title\">03/03</h3>\r\n                <div className=\"day-forecast-icon\" />\r\n                <div className=\"day-forecast-temp\">4°</div>\r\n                <div className=\"day-forecast-weather day-forecast-weather-sunny\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeatherForecastItem;\r\n\r\nWeatherForecastItem.propTypes = {\r\n    forecastData: PropTypes.object,\r\n    place: PropTypes.string\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { CurrentForecast } from \"../CurrentForecast\";\r\nimport { WeatherForecastItem } from \"../WeatherForecastItem\";\r\nimport uuid from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class WeatherForecast extends Component {\r\n    createSortedList(list) {\r\n        const hoursForecastList = [];\r\n        const indexesList = [3, 11, 19, 27, 35];\r\n\r\n        indexesList.forEach(item => {\r\n            hoursForecastList.push(list[item]);\r\n        });\r\n\r\n        return hoursForecastList;\r\n    }\r\n\r\n    renderTemplate() {\r\n        const { data, isFetching, error, place } = this.props;\r\n        const finalDaysForecastList = data\r\n            ? this.createSortedList(data[1].list)\r\n            : null;\r\n        const weatherForecastItemsList = finalDaysForecastList\r\n            ? finalDaysForecastList.map(item => {\r\n                  return (\r\n                      <WeatherForecastItem\r\n                          forecastData={item}\r\n                          place={place}\r\n                          key={uuid.v4()}\r\n                      ></WeatherForecastItem>\r\n                  );\r\n              })\r\n            : \"\";\r\n\r\n        if (error) {\r\n            return <p className=\"error\">Error!</p>;\r\n        }\r\n\r\n        if (isFetching) {\r\n            return <p className=\"loading\">Loading...</p>;\r\n        } else {\r\n            return (\r\n                <div className=\"search-results-container\">\r\n                    <CurrentForecast\r\n                        forecastData={data ? data[0] : null}\r\n                    ></CurrentForecast>\r\n                    <div className=\"forecast-nearest-days\">\r\n                        {weatherForecastItemsList}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.renderTemplate();\r\n    }\r\n}\r\n\r\nexport default WeatherForecast;\r\n\r\nWeatherForecast.propTypes = {\r\n    data: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    error: PropTypes.string,\r\n    isFetching: PropTypes.bool\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport class HistoryListItem extends Component {\r\n    render() {\r\n        return <li className=\"user-activity-list-item\">Dresden, DE</li>;\r\n    }\r\n}\r\n\r\nexport default HistoryListItem;\r\n","import React, { Component } from \"react\";\r\nimport { HistoryListItem } from \"../HistoryListItem\";\r\n\r\nexport class HistoryList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-activity-item\">\r\n                <div className=\"user-activity-header\">\r\n                    <h3 className=\"user-activity-title user-activity-title-history\">\r\n                        recently viewed\r\n                    </h3>\r\n                    <button className=\"remove-button\" />\r\n                </div>\r\n                <div className=\"user-activity-content\">\r\n                    <ul className=\"user-activity-list\">\r\n                        <HistoryListItem></HistoryListItem>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryList;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class FavouritesListItem extends Component {\r\n    render() {\r\n        return <li className=\"user-activity-list-item\">Braga, PT</li>;\r\n    }\r\n}\r\n\r\nexport default FavouritesListItem;\r\n","import React, { Component } from \"react\";\r\nimport { FavouritesListItem } from \"../FavouritesListItem\";\r\n\r\nexport class FavouritesList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-activity-item\">\r\n                <div className=\"user-activity-header\">\r\n                    <h3 className=\"user-activity-title user-activity-title-fav\">\r\n                        favourite\r\n                    </h3>\r\n                    <button className=\"remove-button\" />\r\n                </div>\r\n                <div className=\"user-activity-content\">\r\n                    <ul className=\"user-activity-list\">\r\n                        <FavouritesListItem></FavouritesListItem>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FavouritesList;\r\n","import React, { Component } from \"react\";\r\nimport { HistoryList } from \"../HistoryList\";\r\nimport { FavouritesList } from \"../FavouritesList\";\r\n\r\nexport class UserActions extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"user-activity-wrap\">\r\n                <FavouritesList></FavouritesList>\r\n                <HistoryList></HistoryList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserActions;\r\n","import { apiKey } from \"../utils/constants\";\r\nimport { currentWeaterURLString } from \"../utils/constants\";\r\nimport { weatherForecastURLString } from \"../utils/constants\";\r\n\r\nexport class HttpService {\r\n    getWeatherURLS(url, city) {\r\n        return `${url}${city}&appid=${apiKey}&units=metric`;\r\n    }\r\n\r\n    getWeatherData(city) {\r\n        const urlsArray = [\r\n            this.getWeatherURLS(currentWeaterURLString, city),\r\n            this.getWeatherURLS(weatherForecastURLString, city)\r\n        ];\r\n\r\n        return Promise.all(urlsArray.map(u => fetch(u))).then(responses =>\r\n            Promise.all(responses.map(res => res.json()))\r\n        );\r\n    }\r\n\r\n    getForecast(url, city) {\r\n        const requestURL = `${url}${city}&appid=${apiKey}&units=metric`;\r\n\r\n        return fetch(requestURL)\r\n            .then(response => response.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n}\r\n\r\nexport default HttpService;\r\n","import { HttpService } from \"../services/dataService\";\r\n\r\nexport const REQUEST = \"REQUEST\";\r\nexport const REQUEST_SUCCESS = \"REQUEST_SUCCESS\";\r\nexport const REQUEST_FAIL = \"REQUEST_FAIL\";\r\n\r\nexport const handleForecastData = city => dispatch => {\r\n    dispatch({\r\n        type: REQUEST\r\n    });\r\n\r\n    const httpService = new HttpService();\r\n\r\n    httpService\r\n        .getWeatherData(city)\r\n        .then(res => {\r\n            const data = res;\r\n            dispatch({\r\n                type: REQUEST_SUCCESS,\r\n                payload: data\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: REQUEST_FAIL,\r\n                payload: err,\r\n                error: true\r\n            });\r\n        });\r\n};\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SearchBar } from \"../components/Searchbar\";\nimport { WeatherForecast } from \"../components/WeatherForecast\";\nimport { UserActions } from \"../components/UserActions\";\nimport { setPlace } from \"../actions/placeAction\";\nimport { handleForecastData } from \"../actions/forecastDataAction\";\nimport \"../styles/scss/main.scss\";\n\nclass App extends Component {\n    render() {\n        const {\n            setPlaceAction,\n            getForecastDataAction,\n            forecastData,\n            place\n        } = this.props;\n\n        // console.log(this.props);\n\n        return (\n            <div className=\"App\">\n                <main className=\"main\">\n                    <div className=\"app-container\">\n                        <h1 className=\"main-title\">Weather application</h1>\n                        <SearchBar\n                            handleForecastData={getForecastDataAction}\n                            place={setPlaceAction}\n                        ></SearchBar>\n                        <WeatherForecast\n                            data={forecastData.data}\n                            error={forecastData.error}\n                            isFetching={forecastData.isFetching}\n                            place={place}\n                        ></WeatherForecast>\n                        <UserActions></UserActions>\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    console.log(store);\n    return {\n        // isFavourite: store.search.isFavourite,\n        // unit: store.unit,\n        // color: store.color,\n        forecastData: store.forecastData,\n        place: store.place.place\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setPlaceAction: place => dispatch(setPlace(place)),\n        getForecastDataAction: city => dispatch(handleForecastData(city))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","export const setPlace = place => ({\r\n    type: \"SET_PLACE\",\r\n    payload: place\r\n});\r\n","export const initialState = {\r\n    unit: \"Metric\"\r\n};\r\n\r\nexport function unitsReducer(state = initialState) {\r\n    return state;\r\n}\r\n","export const initialState = {\r\n    place: \"Kyiv\",\r\n    isFavourite: false\r\n};\r\n\r\nexport function placeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_PLACE\":\r\n            return { ...state, place: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const initialState = {\r\n    color: \"Dark\"\r\n};\r\n\r\nexport function themeColorReducer(state = initialState) {\r\n    return state;\r\n}\r\n","import {\r\n    REQUEST,\r\n    REQUEST_SUCCESS,\r\n    REQUEST_FAIL\r\n} from \"../actions/forecastDataAction\";\r\n\r\nexport const initialState = {\r\n    data: null,\r\n    isFetching: false,\r\n    error: \"\"\r\n};\r\n\r\nexport function forecastReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REQUEST:\r\n            return { ...state, isFetching: true, error: \"\" };\r\n        case REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                data: action.payload,\r\n                error: \"\"\r\n            };\r\n        case REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                error: action.payload.message\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { unitsReducer } from \"./units\";\r\nimport { placeReducer } from \"./place\";\r\nimport { themeColorReducer } from \"./theme\";\r\nimport { forecastReducer } from \"./forecast\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    units: unitsReducer,\r\n    place: placeReducer,\r\n    themeColor: themeColorReducer,\r\n    forecastData: forecastReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/configureStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}